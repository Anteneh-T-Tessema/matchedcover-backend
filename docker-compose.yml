version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: matchedcover_postgres
    environment:
      POSTGRES_DB: matchedcover
      POSTGRES_USER: mc_user
      POSTGRES_PASSWORD: mc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis for caching and message queues
  redis:
    image: redis:7-alpine
    container_name: matchedcover_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # MongoDB for document storage
  mongodb:
    image: mongo:7
    container_name: matchedcover_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mc_user
      MONGO_INITDB_ROOT_PASSWORD: mc_password
      MONGO_INITDB_DATABASE: matchedcover
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # ChromaDB for vector storage
  chromadb:
    image: chromadb/chroma:latest
    container_name: matchedcover_chromadb
    ports:
      - "8001:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      CHROMA_HOST: 0.0.0.0
      CHROMA_PORT: 8000

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: matchedcover_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  # Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: matchedcover_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: matchedcover_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: matchedcover_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: matchedcover_grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources

  # Elasticsearch for logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: matchedcover_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: matchedcover_kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  chromadb_data:
  qdrant_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  default:
    name: matchedcover_network
